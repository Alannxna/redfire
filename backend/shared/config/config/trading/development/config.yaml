app:
  name: trading_service
  version: 1.0.0
  environment: development
  service_type: trading
  port: 8020

config_service:
  url: ${REDFIRE_CONFIG_SERVICE_URL:http://localhost:8001}
  token: ${REDFIRE_CONFIG_SERVICE_TOKEN:redfire_config_token}
  enabled: true
  cache_ttl: 300

database:
  host: ${REDFIRE_TRADING_DB_HOST:localhost}
  port: ${REDFIRE_TRADING_DB_PORT:5432}
  name: ${REDFIRE_TRADING_DB_NAME:trading_db}
  user: ${REDFIRE_TRADING_DB_USER:trading_user}
  password: ${REDFIRE_TRADING_DB_PASSWORD:password}
  pool_size: 20
  max_overflow: 10

redis:
  host: ${REDFIRE_TRADING_REDIS_HOST:localhost}
  port: ${REDFIRE_TRADING_REDIS_PORT:6379}
  db: ${REDFIRE_TRADING_REDIS_DB:1}
  password: ${REDFIRE_TRADING_REDIS_PASSWORD:}
  pool_size: 10

vnpy:
  config_path: config/vnpy/development/config.yaml
  data_path: ${REDFIRE_TRADING_VNPY_DATA_PATH:/data/vnpy}
  log_path: logs/vnpy

risk:
  max_position: ${REDFIRE_TRADING_RISK_MAX_POSITION:1000000}
  max_daily_loss: ${REDFIRE_TRADING_RISK_MAX_LOSS:50000}
  risk_check_interval: 5

logging:
  level: ${REDFIRE_TRADING_LOG_LEVEL:INFO}
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: logs/trading_service.log
  max_size: 100MB
  backup_count: 5

monitoring:
  metrics_enabled: true
  health_check_path: /health
  prometheus_port: ${REDFIRE_TRADING_METRICS_PORT:9092}
